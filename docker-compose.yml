services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD-SHELL", "echo stat | nc localhost 2181 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.5.3
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 15s
      timeout: 10s
      retries: 6
    ports:
      - "9092:9092"
      - "29092:29092"

  config-server:
    build: ./config-server
    image: bancoxyz/config-server:latest
    container_name: config-server
    depends_on:
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: native
      AUTH_SERVER_ISSUER: http://auth-server:9000
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - "8888:8888"

  discovery-server:
    build: ./discovery-server
    image: bancoxyz/discovery-server:latest
    container_name: discovery-server
    depends_on:
      config-server:
        condition: service_started
    ports:
      - "8761:8761"

  auth-server:
    build: ./auth-server
    image: bancoxyz/auth-server:latest
    container_name: auth-server
    environment:
      AUTH_SERVER_ISSUER: http://auth-server:9000
    ports:
      - "9000:9000"

  legacy-api:
    build: ./legacy-api
    image: bancoxyz/legacy-api:latest
    container_name: legacy-api
    depends_on:
      discovery-server:
        condition: service_started
    environment:
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
    ports:
      - "8090:8090"

  analytics-service:
    build: ./analytics-service
    image: bancoxyz/analytics-service:latest
    container_name: analytics-service
    depends_on:
      config-server:
        condition: service_started
      discovery-server:
        condition: service_started
      kafka:
        condition: service_healthy
    environment:
      CONFIG_SERVER_URL: http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8550:8550"

  bff-web:
    build: ./bff-web
    image: bancoxyz/bff-web:latest
    container_name: bff-web
    depends_on:
      config-server:
        condition: service_started
      discovery-server:
        condition: service_started
      legacy-api:
        condition: service_started
      analytics-service:
        condition: service_started
      auth-server:
        condition: service_started
    environment:
      CONFIG_SERVER_URL: http://config-server:8888
      EUREKA_CLIENT_SERVICEURL_DEFAULTZONE: http://discovery-server:8761/eureka
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
      AUTH_SERVER_ISSUER: http://auth-server:9000
      AUTH_SERVER_JWKS_URI: http://auth-server:9000/oauth2/jwks
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8443:8443"

  bff-mobile:
    build: ./bff-mobile
    image: bancoxyz/bff-mobile:latest
    container_name: bff-mobile
    depends_on:
      config-server:
        condition: service_started
      legacy-api:
        condition: service_started
      auth-server:
        condition: service_started
    environment:
      CONFIG_SERVER_URL: http://config-server:8888
      LEGACY_API_URL: http://legacy-api:8090
      AUTH_SERVER_ISSUER: http://auth-server:9000
      AUTH_SERVER_JWKS_URI: http://auth-server:9000/oauth2/jwks
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8444:8444"

  bff-atm:
    build: ./bff-atm
    image: bancoxyz/bff-atm:latest
    container_name: bff-atm
    depends_on:
      config-server:
        condition: service_started
      legacy-api:
        condition: service_started
      auth-server:
        condition: service_started
    environment:
      CONFIG_SERVER_URL: http://config-server:8888
      LEGACY_API_URL: http://legacy-api:8090
      AUTH_SERVER_ISSUER: http://auth-server:9000
      AUTH_SERVER_JWKS_URI: http://auth-server:9000/oauth2/jwks
      SPRING_PROFILES_ACTIVE: docker
    ports:
      - "8445:8445"

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "8080:8080"

networks:
  default:
    name: bancoxyz-net
